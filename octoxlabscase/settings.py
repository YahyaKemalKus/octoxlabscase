"""
Django settings for octoxlabscase project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
import environ

env = environ.Env()
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, '.env.dev'), overwrite=False)
BASE_URL = env("BASE_URL")
SECRET_KEY = env("SECRET_KEY")
DEBUG = env.bool("DEBUG", default=False)
ALLOWED_HOSTS = env.list("ALLOWED_HOSTS")

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
    'corsheaders',
    'rest_framework',
    'octox_auth',
    'hosts',
    'users'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'octoxlabscase.urls'
FORCE_SCRIPT_NAME = '/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'octoxlabscase.wsgi.application'

DATABASES = {
    'default': env.db()
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static Files Setup
STATIC_URL = 'staticfiles/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

# Cors Setup
CORS_ORIGIN_ALLOW_ALL = env.bool("CORS_ORIGIN_ALLOW_ALL")
CORS_ALLOW_HEADERS = env.list("CORS_ALLOW_HEADERS")

# Swagger Setup
SWAGGER_SETTINGS = {
    'PERSIST_AUTH': True,  # it would be painful to set apikey each time
    'SECURITY_DEFINITIONS': {
        'OctoXLabsToken': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}

# Rest Setup
REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'common.handlers.custom_exception_handler'
}

AUTH_HEADER_PREFIX = env("AUTH_HEADER_PREFIX")

OCTOXLABS_USER_MODEL = "users.OctoXLabsUser"
OCTOXLABS_SUPERUSER_NAME = env("OCTOXLABS_SUPERUSER_NAME")
AUTH_USER_MODEL = "users.OctoXLabsUser"

ELASTIC_USERNAME = env("ELASTIC_USERNAME")
ELASTIC_PASSWORD = env("ELASTIC_PASSWORD")
ELASTIC_HOST = env("ELASTIC_HOST")
ELASTIC_INDEX = env("ELASTIC_INDEX")
ELASTIC_TEST_HOST = env("ELASTIC_TEST_HOST")
ELASTIC_TEST_INDEX = env("ELASTIC_TEST_INDEX")

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
